// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  email         String        @unique
  password      String
  name          String
  avatar        String?
  // Twilio identity for this user
  twilioIdentity String       @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  participants  Participant[]

  @@map("users")
}


model Conversation {
  id           String        @id // This will be the Twilio conversation SID
  friendlyName String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  participants Participant[]

  @@map("conversations")
}

model Participant {
  id             String       @id // This will be the Twilio participant SID
  // The Twilio identity of the participant (matches User.twilioIdentity)
  identity       String
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  // Twilio-specific participant attributes
  attributes     Json?        // Store any Twilio participant attributes

  @@unique([conversationId, userId])
  @@unique([conversationId, identity])
  @@index([identity])
  @@map("participants")
}
